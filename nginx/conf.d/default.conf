# /etc/nginx/conf.d/wildcard-proxy.conf
# This file will be included by the default nginx.conf

# Define service-specific ports
map $service $upstream_port {
    default     80;    # Default port if not specified
    # app         3000;  # Your service-specific ports
    blog        80;
    api         8000;
    # Add more service:port mappings as needed
}

# Wildcard server block
server {
    listen 80;
    server_name ~^(?<service>.+)\.xurl\.fyi$;

    return 301 https://$host$request_uri;
    # location / {
    #     # Dynamic upstream configuration
    #     set $upstream http://$service:$upstream_port;
    #     proxy_pass $upstream;

    #     # Basic proxy settings
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;

    #     # Handle container unavailability
    #     proxy_connect_timeout 5s;
    #     proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
    # }
}

server {
    listen 80;
    server_name xurl.fyi www.xurl.fyi;  # Your domain without wildcard subdomain
    return 301 https://$host$request_uri;

    # location /laravel {
    #     proxy_pass http://laravel-app:80;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    # }

    # location /nodejs {
    #     proxy_pass http://nodejs-app:80;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    # }

    # Default location if no specific route matches
    location / {
        proxy_pass http://app:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # SSL configuration (if using SSL)
    # listen 443 ssl;
    # ssl_certificate /etc/nginx/certs/fullchain.pem;
    # ssl_certificate_key /etc/nginx/certs/privkey.pem;
}


server {
    listen 443 ssl;
    server_name xurl.fyi;

    ssl_certificate /etc/letsencrypt/live/xurl.fyi.fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/xurl.fyi.key;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

     location / {
        proxy_pass http://app:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}


server {
    listen 443 ssl;
    server_name ~^(?<service>.+)\.xurl\.fyi$;

    ssl_certificate /etc/letsencrypt/live/xurl.fyi.fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/xurl.fyi.key;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    location / {
        # Dynamic upstream configuration
        set $upstream http://$service:$upstream_port;
        proxy_pass $upstream;

        # Basic proxy settings
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Handle container unavailability
        proxy_connect_timeout 5s;
        proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
    }
}