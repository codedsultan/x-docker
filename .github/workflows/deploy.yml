name: Deploy Nginx

on:
  push:
    branches: [ main ]

jobs:

  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup SSH Agent
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          
      - name: Add GitHub to Known Hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H github.com >> ~/.ssh/known_hosts

      - name: Add Server to Known Hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan  -p 2222 -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Configure git to use merge
        run: git config --global pull.rebase false

      # - name: Change permissions for SSL directory
      #   run: |
      #     sudo chmod -R 777 ${{ secrets.DEPLOY_PATH }}/ssl || true
      #     sudo chown -R $(whoami) ${{ secrets.DEPLOY_PATH }}/ssl || true

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PAT_TOKEN }}
          
      # - name: Deploy Nginx
      #   env:
      #     SERVER_IP: ${{ secrets.SERVER_IP }}
      #     SERVER_USER: ${{ secrets.SERVER_USER }}
      #     DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
      #   run: |
      #     ssh -p 2222 "${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}" << 'ENDSSH'
      #       set -euxo pipefail
      #       cd "${{ secrets.DEPLOY_PATH }}"
      #       docker-compose stop app nginx && docker-compose rm -f app nginx
            
      #       # git fetch origin
      #       # git reset --hard origin/main
      #       # git reset --hard HEAD
      #       # git add .
      #       # git commit -m "Update"
      #       git reset --hard origin/main
      #       git pull origin main
      #       echo "${{ secrets.PAT_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
      #       docker-compose pull -q app nginx
      #       docker-compose up -d --remove-orphans app nginx
      #     ENDSSH

      - name: Deploy to Server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 2222  # Replace with your custom SSH port
          script: |
            cd "${{ secrets.DEPLOY_PATH }}"
            docker-compose stop app nginx && docker-compose rm -f app nginx
            git reset --hard origin/main
            git pull origin main
            echo "${{ secrets.PAT_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
            docker-compose pull -q app nginx
            docker-compose up -d --remove-orphans app nginx

            sudo mkdir -p /var/www/apps/nodejs/static
            NODE_CONTAINER=$(docker ps --filter "name=nodejs-app" --format "{{.ID}}")
            
            if [ -z "$NODE_CONTAINER" ]; then
              echo "Node.js container is not running. Starting it..."
              sudo docker-compose up -d app
              sleep 10
              NODE_CONTAINER=$(docker ps --filter "name=nodejs-apps" --format "{{.ID}}")
            fi

            sudo docker cp $NODE_CONTAINER:/kutt/static /var/www/apps/nodejs/static
            sudo chown -R www-data:www-data /var/www/apps/nodejs/static
            sudo chmod -R 755 /var/www/apps/nodejs/static
            sudo docker-compose restart app
                