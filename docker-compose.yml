version: '3.8'

services:
  # Laravel Application
  blog:
    image: ghcr.io/vecitech/infinitus:latest
    # build:
    #   context: ../laravel
    #   dockerfile: Dockerfile
    container_name: laravel-app
    restart: unless-stopped
    volumes:
      - /var/www/apps/laravel:/var/www/html
      # - /var/www/apps/laravel/public:/var/www/html/public  # Persist public assets (optional)
      # - laravel-public:/var/www/html/public
      # - laravel-storage:/var/www/html/storage 
      # - /var/www/apps/laravel/storage:/var/www/html/storage  # Persist storage
      # - /var/www/apps/laravel/storage:/var/www/html/storage  # Persist storage
      # - /var/www/apps/laravel/.env:/var/www/html/.env
      # - vendor:/var/www/html/vendor
    # ports:
    #   - 8080:8080
    environment:
      - APP_ENV=production
      - DB_HOST=mysql
      - REDIS_HOST=redis
      - QUEUE_CONNECTION=redis
    depends_on:
      - mysql
      - redis
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"

  # FastAPI Application
  api:
    image: ghcr.io/codesultan-ix/jet-fast-api:latest
    container_name: fastapi-app
    restart: unless-stopped
    volumes:
      - /var/www/apps/fastapi:/app
    environment:
      - ENVIRONMENT=production
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"

  # Node.js Application
  app:
    image: ghcr.io/codedsultan/xurl:latest
    container_name: nodejs-app
    # user: "1000:1000"  
    restart: unless-stopped
    volumes:
      # - /var/www/apps/nodejs/static:/kutt/static
      - nodejs-static:/kutt/static
      - db_data_sqlite:/var/lib/kutt
      - /var/www/apps/nodejs/custom:/kutt/custom 
      # - /var/www/apps/nodejs/.env:/kutt/.env:ro
    env_file:
      - /var/www/apps/nodejs/.env
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"

  # Nginx Service
  nginx:
    image: ghcr.io/codedsultan/ngnix-acme-namecom/ngnix-acme-namecom:latest
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/www/apps/nginx/conf.d:/etc/nginx/conf.d
      - /var/www/apps/nginx/conf/nginx.conf:/etc/nginx/nginx.conf
      - /var/www/apps/ssl/:/etc/letsencrypt/live
      # - /var/www/apps/nodejs/static:/usr/share/nginx/html/nodejs/static
      # - /var/www/apps/docker/nginx/acme:/home/deploy/.acme.sh
      - nodejs-static:/usr/share/nginx/html/nodejs/static
      - /var/www/apps/nginx/logs:/var/log/nginx
      - /var/www/apps/docker/nginx/errors:/usr/share/nginx/html/errors
      - /var/www/apps/laravel:/usr/share/nginx/html/laravel
      # - /var/www/apps/laravel/public:/usr/share/nginx/html/laravel/public:ro  # Persist public assets (optional)
      # - /var/www/apps/laravel:/usr/share/nginx/html/laravel/storage:ro # Persist storage
      # - laravel-public:/usr/share/nginx/html/laravel/public  # Persist public assets (optional)
    
    labels:
      - "monitoring.enabled=true"
    depends_on:
      - app
    networks:
      - app-network
    environment:
      - NAMECOM_USERNAME=${NAMECOM_USERNAME}
      - NAMECOM_TOKEN=${NAMECOM_TOKEN}
      - SLACK_MONITORING_WEB_HOOK=${SLACK_MONITORING_WEB_HOOK}
      - EMAIL=${EMAIL}
      - STAGING=${STAGING}
      - DOMAIN=${DOMAIN}

    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"

  # MySQL Service
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: jetblog
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      # MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      # MYSQL_DATABASE: ${DB_DATABASE}
      # MYSQL_USER: ${DB_USERNAME}
      # MYSQL_PASSWORD: ${DB_PASSWORD}
        # MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      # MYSQL_DATABASE: ${DB_DATABASE}
      # MYSQL_USER: ${DB_USERNAME}
      # MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql/conf.d:/etc/mysql/conf.d
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"

  # Redis Service
  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    volumes:
      - redis-data:/data
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"

  # Laravel Queue Worker
  laravel-queue:
    build:
      context: ../laravel
      dockerfile: Dockerfile
    container_name: laravel-queue
    restart: unless-stopped
    command: php artisan queue:work
    depends_on:
      - blog
      - redis
    volumes:
      - ../laravel:/var/www/html
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"
  # cAdvisor
  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    restart: always
    ports:
      - "8080:8080"  # Expose cAdvisor web UI
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
  # Prometheus (Monitoring)
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - app-network
    ports:
      - "9090:9090"

  # Grafana (Monitoring UI)
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    # user: "472:472"  
    env_file:
      - .env
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    volumes:
      - ./monitoring/grafana:/var/lib/grafana
    networks:
      - app-network
    ports:
      - "3000:3000"

  # Loki (Logging)
  loki:
    image: grafana/loki:latest
    container_name: loki
    restart: unless-stopped
    volumes:
      - ./monitoring/loki-config.yml:/etc/loki/config.yml
    networks:
      - app-network
    ports:
      - "3100:3100"

  # Promtail (Log Collector)
  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    restart: unless-stopped
    volumes:
      - /var/log:/var/log
      - ./monitoring/promtail-config.yml:/etc/promtail/config.yml
      # - ./nginx/logs:/var/log/nginx
    networks:
      - app-network

  # Alertmanager (For Notifications)
  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    restart: unless-stopped
    volumes:
      - ./monitoring/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    networks:
      - app-network
    ports:
      - "9093:9093"

volumes:
  mysql-data:
  redis-data:
  vendor:
  # storage-data:
  db_data_sqlite:
  laravel-storage:
  laravel-public:
  nodejs-static:

networks:
  app-network:
    driver: bridge
